name: Deploy Documentation

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    # Setup Python for session_py docs
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Setup Rust for session_rust docs
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    # Setup C++ dependencies for session_cpp docs
    - name: Install C++ dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential doxygen

    # Build Python documentation
    - name: Build Python docs
      working-directory: ./session_py
      run: |
        pip install -r requirements.txt
        chmod +x doc.sh
        ./doc.sh

    # Build Rust documentation
    - name: Build Rust docs
      working-directory: ./session_rust
      run: |
        chmod +x doc.sh
        ./doc.sh

    # Build C++ documentation
    - name: Build C++ docs
      working-directory: ./session_cpp
      run: |
        chmod +x doc.sh
        ./doc.sh

    # Create unified docs structure
    - name: Prepare unified docs
      run: |
        mkdir -p docs_unified
        
        # Copy Python docs
        if [ -d "session_py/docs_output" ]; then
          cp -r session_py/docs_output docs_unified/session_py
        fi
        
        # Copy Rust docs
        if [ -d "session_rust/target/doc" ]; then
          cp -r session_rust/target/doc docs_unified/session_rust
        fi
        
        # Copy C++ docs
        if [ -d "session_cpp/docs_output" ]; then
          cp -r session_cpp/docs_output docs_unified/session_cpp
        fi

    # Create index.html
    - name: Create unified index
      run: |
        cat > docs_unified/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Session Library Documentation</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 2rem;
                    background: #f8f9fa;
                }
                .header {
                    text-align: center;
                    margin-bottom: 3rem;
                    padding: 2rem;
                    background: white;
                    border-radius: 12px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                }
                .header h1 {
                    color: #2c3e50;
                    margin-bottom: 0.5rem;
                }
                .header p {
                    color: #7f8c8d;
                    font-size: 1.1rem;
                }
                .docs-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
                    gap: 2rem;
                    margin-bottom: 3rem;
                }
                .doc-card {
                    background: white;
                    border-radius: 12px;
                    padding: 2rem;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    transition: transform 0.2s, box-shadow 0.2s;
                }
                .doc-card:hover {
                    transform: translateY(-5px);
                    box-shadow: 0 4px 20px rgba(0,0,0,0.15);
                }
                .doc-card h2 {
                    color: #2c3e50;
                    margin-bottom: 1rem;
                    display: flex;
                    align-items: center;
                    gap: 0.5rem;
                }
                .doc-card p {
                    color: #7f8c8d;
                    margin-bottom: 1.5rem;
                    line-height: 1.6;
                }
                .doc-link {
                    display: inline-block;
                    background: #3498db;
                    color: white;
                    padding: 0.75rem 1.5rem;
                    text-decoration: none;
                    border-radius: 6px;
                    font-weight: 500;
                    transition: background 0.2s;
                }
                .doc-link:hover {
                    background: #2980b9;
                }
                .python { border-left: 4px solid #3776ab; }
                .rust { border-left: 4px solid #ce422b; }
                .cpp { border-left: 4px solid #00599c; }
                .footer {
                    text-align: center;
                    color: #7f8c8d;
                    margin-top: 3rem;
                    padding: 2rem;
                    background: white;
                    border-radius: 12px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                }
                .lang-icon {
                    width: 24px;
                    height: 24px;
                    border-radius: 4px;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>Session Library Documentation</h1>
                <p>Simple 3D Point and Color library with <strong>JSON compatibility</strong> between Rust, Python, and C++</p>
            </div>

            <div class="docs-grid">
                <div class="doc-card python">
                    <h2>
                        <div class="lang-icon" style="background: #3776ab;"></div>
                        Python API
                    </h2>
                    <p>Python implementation with clean API for 3D point and color manipulation. Features JSON serialization and cross-language compatibility.</p>
                    <a href="session_py/html/index.html" class="doc-link">View Python Docs</a>
                </div>

                <div class="doc-card rust">
                    <h2>
                        <div class="lang-icon" style="background: #ce422b;"></div>
                        Rust API
                    </h2>
                    <p>High-performance Rust implementation with memory safety and zero-cost abstractions. Includes comprehensive JSON support.</p>
                    <a href="session_rust/session_rust/index.html" class="doc-link">View Rust Docs</a>
                </div>

                <div class="doc-card cpp">
                    <h2>
                        <div class="lang-icon" style="background: #00599c;"></div>
                        C++ API
                    </h2>
                    <p>Modern C++ implementation with clean API design. Features JSON compatibility and cross-platform support.</p>
                    <a href="session_cpp/html/index.html" class="doc-link">View C++ Docs</a>
                </div>
            </div>

            <div class="footer">
                <p>All three implementations share the same JSON format for seamless interoperability.</p>
                <p><strong>GitHub:</strong> <a href="https://github.com/your-username/session">View Source Code</a></p>
            </div>
        </body>
        </html>
        EOF

    # Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs_unified
        publish_branch: docs
